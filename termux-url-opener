#!/bin/bash

# option naming
DOWNLOAD_IMAGE="download image (gallery-dl)"
DOWNLOAD_IMAGE_AUTH="download image (gallery-dl authenticated)"
DOWNLOAD_YT_VIDEO="download video/playlist (yt-dl)"
DOWNLOAD_YT_AUDIO="download audio (yt-dl)"
DOWNLOAD_SPOTDL_AUDIO="download track/playlist/album (spotdl)"
STORE_LINK="store shared link to a file"
CLONE_REPO="clone github repo"
DOWNLOAD_FILE="download torrent or regular file"
NONE="nothing"

function cancel () {
	echo "Cancelled..."
	exit 1
}

function prompt_radio () {
	local options="$1"
	local prompt_msg="$2"
	local chosen_option=$(termux-dialog radio \
		-v "$options" \
		-t "$prompt_msg" \
		| grep text \
		| cut -d "\"" -f4)
	echo "$chosen_option"
}

function prompt_text () {
	local prompt_msg="$1"
	local chosen_option=$(termux-dialog text \
		-t "$prompt_msg" \
		| grep text \
		| cut -d "\"" -f4)
	echo "$chosen_option"
}

function prompt_pass () {
	local prompt_msg="$1"
	local chosen_option=$(termux-dialog text -p \
		-t "$prompt_msg" \
		| grep text \
		| cut -d "\"" -f4)
	echo "$chosen_option"
}

# checks which directories available 
# and prompt them to the user
function get_path () {
	local paths=( \
		"Downloads/" \
		"Movies/" \
		"Pictures/" \
		"Music/" \
		"storage/downloads/" \
		"storage/music/" \
		"storage/movies/" \
		"storage/pictures/" \
		"storage/external-1/")
	local valid_routes=""

	for i in "${paths[@]}"; do
		[ -d "$HOME/$i" ] && valid_routes+="$i,"
	done

	local chosen=$(prompt_radio "$valid_routes" "Choose download path:")
	echo "$HOME/$chosen"
}

function download_yt_video () {
	path="$1"
	url="$2"
	format=$(prompt_radio \
		"720p,480p,best quality" \
		"Choose video quality:")
	[ -z "$format" ] && cancel

	case "$format" in
		"best quality")
			quality="bestvideo+bestaudio/best"
			;;
		*)
			quality="bestvideo[height<=$format]+bestaudio/best[height<=$format]"
			;;
	esac

	yt-dlp --yes-playlist \
		-cif "$quality" \
		-o "$path%(title)s.%(ext)s" \
		"$url"
}

function download_yt_audio () {
	path="$1"
	url="$2"
	format=$(prompt_radio "mp3,m4a,flac,opus" "Choose audio format:")
	[ -z "$format" ] && cancel

	yt-dlp \
		-x --audio-format "$format" --audio-quality 0 \
		--embed-thumbnail \
		-o "$path%(title)s.%(ext)s" \
		"$url"
}

function download_spotdl () {
	path="$1"
	url="$2"
	format=$(prompt_radio "mp3,m4a,flac,opus,ogg" "Choose audio format:")
	[ -z "$format" ] && cancel

	spotdl "$url" -o "$path" --of "$format"
}

function download_image () {
	path="$1"
	url="$2"

	gallery-dl -d "$path" "$url"
}

function download_image_auth () {
	path="$1"
	url="$2"

	username=$(prompt_text "Enter username:")
	pass=$(prompt_pass "Enter password:")

	gallery-dl -u "$username" -p "$pass" -d "$path" "$url"
}


url="$1"
echo "Share link: $url"


options=""
case "$url" in
	*youtu.be*|youtube.com*)
		options+="$DOWNLOAD_YT_VIDEO,"
		options+="$DOWNLOAD_YT_AUDIO,"
		options+="$DOWNLOAD_SPOTDL_AUDIO,"
		;;
	*open.spotify.com/track/*)
		options+="$DOWNLOAD_SPOTDL_AUDIO,"
		;;
	*open.spotify.com/*/playlist/*)
		options+="$DOWNLOAD_SPOTDL_AUDIO,"
		;;
	*open.spotify.com/album/*)
		options+="$DOWNLOAD_SPOTDL_AUDIO,"
		;;
	*instagram.com*)
		options+="$DOWNLOAD_IMAGE_AUTH,"
		;;
	*imgur.com*)
		options+="$DOWNLOAD_IMAGE,"
		;;
	*github.com*)
		options+="$CLONE_REPO,"
		;;
	*)
		options+="$DOWNLOAD_FILE,"
		options+="$DOWNLOAD_IMAGE,"
		options+="$DOWNLOAD_YT_VIDEO,"
		options+="$DOWNLOAD_YT_AUDIO,"
		options+="$DOWNLOAD_SPOTDL_AUDIO,"
		;;
esac
options+="$STORE_LINK,"
options+="$NONE"


method=$(prompt_radio "$options" "Choose download method:")
[ -z "$method" ] && cancel

case "$method" in
	"$DOWNLOAD_YT_VIDEO")
		path=$(get_path)
		echo "Selected directory: $path"
		download_yt_video "$path" "$url"
		;;
	"$DOWNLOAD_YT_AUDIO")
		path=$(get_path)
		echo "Selected directory: $path"
		download_yt_audio "$path" "$url"
		;;
	"$DOWNLOAD_IMAGE")
		path=$(get_path)
		echo "Selected directory: $path"
		download_image "$path" "$url"
		;;
	"$DOWNLOAD_IMAGE_AUTH")
		path=$(get_path)
		echo "Selected directory: $path"
		download_image_auth "$path" "$url"
		;;
	"$CLONE_REPO")
		path=$(get_path)
		echo "Selected directory: $path"
		repo_name=$(echo "$url" | cut -d'/' -f5)
		git clone "$url" "$path$repo_name"
		;;
	"$DOWNLOAD_FILE")
		path=$(get_path)
		echo "Selected directory: $path"
		aria2c -x2 -c "$url" --dir "$path"
		;;
	"$DOWNLOAD_SPOTDL_AUDIO")
		path=$(get_path)
		echo "Selected directory: $path"
		download_spotdl "$path" "$url"
		;;
	"$STORE_LINK")
		echo "$url" >> "$HOME/shared_links.txt"
		;;
	"$NONE")
		cancel
		;;
esac
